---
    
- name: Launch Docker for AWS swarm
  register: stack
  cloudformation:
    stack_name: "{{ swarm_stack_name }}"
    state: present
    region: "{{ aws_region }}"
    template_url: "{{ cloudformation_template_url }}"
    role_arn: "{{ role_arn | default(omit) }}"
  args:
    template_parameters:
      ClusterSize: "{{ num_worker_nodes }}"
      EnableCloudWatchLogs: "{{ enable_cloudwatch_logs }}"
      EnableCloudStorEfs: "{{ enable_cloudstor_efs }}"
      EnableSystemPrune: "{{ enable_system_prune }}"
      InstanceType: "{{ worker_instance_type }}"
      KeyName: "{{ key_name }}"
      ManagerDiskSize: "{{ manager_disk_size }}"
      ManagerDiskType: "{{ manager_disk_type }}"
      ManagerInstanceType: "{{ manager_instance_type }}"
      ManagerSize: "{{ num_manager_nodes }}"
      WorkerDiskType: "{{ worker_disk_type }}"
      WorkerDiskSize: "{{ worker_disk_size }}"
    tags:
      Stack: "{{ swarm_stack_name }}-cloudformation"

- debug: var=stack.stack_resources

- name: Get facts about manager instances
  ec2_remote_facts:
    region: "{{ aws_region }}"
    filters:
      "tag:swarm-node-type": "manager"
      "tag:Stack": "{{ swarm_stack_name }}-cloudformation"
  register: ec2_managers_facts

- debug: var=ec2_managers_facts

- name: Add a manager host to manager group
  add_host:
    hostname: "{{ item }}"
    groups: manager
  with_items: "{{ ec2_managers_facts.instances | map(attribute='public_ip_address')| list | first }}"
